{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class ApiService {\n  constructor(http) {\n    this.http = http;\n    this.apiUrl = 'https://api.datamuse.com/words?rel_syn=';\n  }\n  getSynonyms(word) {\n    return this.http.get(`${this.apiUrl}${word}`);\n  }\n  static {\n    this.ɵfac = function ApiService_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || ApiService)(i0.ɵɵinject(i1.HttpClient));\n    };\n  }\n  static {\n    this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: ApiService,\n      factory: ApiService.ɵfac,\n      providedIn: 'root'\n    });\n  }\n}","map":{"version":3,"names":["ApiService","constructor","http","apiUrl","getSynonyms","word","get","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn"],"sources":["/Users/macbookpro/Desktop/PROJECTS/phrase-analyzer/src/app/api.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\nexport interface Synonym {\n    word: string;\n    score: number;\n}\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class ApiService {\n    private apiUrl = 'https://api.datamuse.com/words?rel_syn=';\n\n    constructor(private http: HttpClient) { }\n\n    getSynonyms(word: string): Observable<Synonym[]> {\n        return this.http.get<Synonym[]>(`${this.apiUrl}${word}`);\n    }\n}"],"mappings":";;AAYA,OAAM,MAAOA,UAAU;EAGnBC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IAFhB,KAAAC,MAAM,GAAG,yCAAyC;EAElB;EAExCC,WAAWA,CAACC,IAAY;IACpB,OAAO,IAAI,CAACH,IAAI,CAACI,GAAG,CAAY,GAAG,IAAI,CAACH,MAAM,GAAGE,IAAI,EAAE,CAAC;EAC5D;;;uCAPSL,UAAU,EAAAO,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;IAAA;EAAA;;;aAAVV,UAAU;MAAAW,OAAA,EAAVX,UAAU,CAAAY,IAAA;MAAAC,UAAA,EAFP;IAAM;EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}